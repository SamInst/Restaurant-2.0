spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.url=jdbc:postgresql://localhost/restaurant_db
spring.datasource.username=postgres
spring.datasource.password=84508897Ss!
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.show-sql=true


#codes to generate tables in database connection:
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
#drop tables and recreate all from the beginning
spring.jpa.properties.dialect=org.hibernate.dialect.PostgreSQLDialectct

#Criando ddls pelo código
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

#Indicando pasta flyway, nesse caso com o arquivo de manipulação do BD
#spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.format_sql=true


spring.jackson.serialization.indent-output=true

spring.datasource.hikari.maximum-pool-size = 5 
spring.datasource.hikari.minimum-idle = 3
spring.datasource.hikari.idle-timeout=10000

# Faz com que não seja permitido a adição de uma propriedade inexistente do objeto.
spring.jackson.deserialization.fail-on-unknown-properties = true

# Faz com que não seja permitido a adição de uma propriedade ignorada do objeto.
spring.jackson.deserialization.fail-on-ignored-properties = true

#lança uma exception para um código não mapeado
spring.mvc.throw-exception-if-no-handler-found = true
spring.resources.add-mappings = false

